{"version":3,"sources":["AskPage.tsx"],"names":["AskPage","useForm","mode","handleSubmit","register","errors","formState","React","useState","successfullySubmitted","setSuccessfullySubmitted","submitForm","data","a","console","log","postQuestion","title","content","userName","created","Date","result","onSubmit","disabled","isSubmitting","htmlFor","id","type","required","minLength"],"mappings":"oPAqBaA,EAAU,WACrB,MAKIC,YAAkB,CACpBC,KAAM,WALNC,EADF,EACEA,aACAC,EAFF,EAEEA,SACaC,EAHf,EAGEC,UAAaD,OACbC,EAJF,EAIEA,UAKF,EACEC,IAAMC,UAAS,GADjB,mBAAOC,EAAP,KAA8BC,EAA9B,KAGMC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBC,QAAQC,IAAIH,GADK,SAGII,YAAa,CAChCC,MAAOL,EAAKK,MACZC,QAASN,EAAKM,QACdC,SAAU,OACVC,QAAS,IAAIC,OAPE,OAGXC,EAHW,OASjBZ,IAAyBY,GATR,2CAAH,sDAYhB,OACE,cAAC,IAAD,CAAML,MAAM,iBAAZ,SACE,sBAAMM,SAAUpB,EAAaQ,GAA7B,SACE,eAAC,IAAD,CAAUa,SAAUlB,EAAUmB,cAAgBhB,EAA9C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYiB,QAAQ,QAApB,mBACA,cAAC,IAAD,aACEC,GAAG,QACHC,KAAK,QACDxB,EAAS,QAAS,CAAEyB,UAAU,EAAMC,UAAW,OAEpDzB,EAAOY,OAA+B,aAAtBZ,EAAOY,MAAMW,MAC5B,cAAC,IAAD,gDAEDvB,EAAOY,OAA+B,cAAtBZ,EAAOY,MAAMW,MAC5B,cAAC,IAAD,0DAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,QAAQ,UAApB,qBACA,cAAC,IAAD,aACEC,GAAG,WACCvB,EAAS,UAAW,CAAEyB,UAAU,EAAMC,UAAW,OAEtDzB,EAAOa,SAAmC,aAAxBb,EAAOa,QAAQU,MAChC,cAAC,IAAD,kDAEDvB,EAAOa,SAAmC,cAAxBb,EAAOa,QAAQU,MAChC,cAAC,IAAD,4DAKJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAeA,KAAK,SAApB,oCAEDnB,GACC,cAAC,IAAD,+DASGT","file":"static/js/3.ad2ac6a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Page } from './Page';\r\nimport {\r\n  FieldError,\r\n  Fieldset,\r\n  FieldContainer,\r\n  FieldLabel,\r\n  FieldInput,\r\n  FieldTextArea,\r\n  FormButtonContainer,\r\n  PrimaryButton,\r\n  SubmissionSuccess,\r\n} from './Styles';\r\nimport { useForm } from 'react-hook-form';\r\nimport { postQuestion } from './QuestionsData';\r\n\r\ntype FormData = {\r\n  title: string;\r\n  content: string;\r\n};\r\n\r\nexport const AskPage = () => {\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n    formState,\r\n  } = useForm<FormData>({\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [successfullySubmitted, setSuccessfullySubmitted] =\r\n    React.useState(false);\r\n\r\n  const submitForm = async (data: FormData) => {\r\n    console.log(data);\r\n\r\n    const result = await postQuestion({\r\n      title: data.title,\r\n      content: data.content,\r\n      userName: 'Fred',\r\n      created: new Date(),\r\n    });\r\n    setSuccessfullySubmitted(result ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Ask a question\">\r\n      <form onSubmit={handleSubmit(submitForm)}>\r\n        <Fieldset disabled={formState.isSubmitting || successfullySubmitted}>\r\n          <FieldContainer>\r\n            <FieldLabel htmlFor=\"title\">Title</FieldLabel>\r\n            <FieldInput\r\n              id=\"title\"\r\n              type=\"text\"\r\n              {...register('title', { required: true, minLength: 10 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <FieldError>You must enter the question title</FieldError>\r\n            )}\r\n            {errors.title && errors.title.type === 'minLength' && (\r\n              <FieldError>The title must be at least 10 characters</FieldError>\r\n            )}\r\n          </FieldContainer>\r\n          <FieldContainer>\r\n            <FieldLabel htmlFor=\"content\">Content</FieldLabel>\r\n            <FieldTextArea\r\n              id=\"content\"\r\n              {...register('content', { required: true, minLength: 50 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <FieldError>You must enter the question content</FieldError>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <FieldError>\r\n                The content must be at least 50 characters\r\n              </FieldError>\r\n            )}\r\n          </FieldContainer>\r\n          <FormButtonContainer>\r\n            <PrimaryButton type=\"submit\">Submit Your Question</PrimaryButton>\r\n          </FormButtonContainer>\r\n          {successfullySubmitted && (\r\n            <SubmissionSuccess>\r\n              Your question was successfully submitted\r\n            </SubmissionSuccess>\r\n          )}\r\n        </Fieldset>\r\n      </form>\r\n    </Page>\r\n  );\r\n};\r\nexport default AskPage;\r\n"],"sourceRoot":""}